{"version":3,"sources":["core.js","components/Signupform.js","context/Reducer.js","context/Context.js","components/LoginForm.js","components/Navbar/DashNavbar.js","components/Dashboard/Postcard.js","components/Dashboard/Dashboard.js","components/Splashscreen.js","images/profile.jpg","components/Profile.js","components/Navbar/SearchAppBar.js","components/Dashboard/MyPosts.js","App.js","reportWebVitals.js","index.js"],"names":["baseurl","window","location","hostname","split","submit","values","resetForm","console","log","axios","post","name","email","phone","password","then","res","data","validationSchema","yup","required","min","matches","max","Signupform","formik","useFormik","initialValues","onSubmit","className","handleSubmit","TextField","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","type","Button","color","reducer","state","action","payload","user","darkTheme","GlobalContext","createContext","undefined","ContextProvider","children","useReducer","dispatch","Provider","Loginform","useContext","withCredentials","alert","_id","DashNavbar","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","to","onClick","style","fontWeight","PostCard","props","time","Card","sx","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","title","subheader","width","CardContent","Typography","CardActions","IconButton","marginRight","Dashboard","useState","posts","setPosts","isMore","setIsMore","useEffect","get","response","catch","err","socket","io","on","message","prev","close","m","moment","format","padding","caption","map","index","length","newPosts","Splashscreen","src","alt","Profile","profile","setProfile","Profileimage","SearchAppBar","MyPosts","myposts","setMyposts","App","useHistory","e","exact","path","component","Login","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3577a077.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseurl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import '../App.css';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\nconst submit = (values,{ resetForm }) => {\r\n  console.log(\"values\", values)\r\n  axios.post(`${baseurl}/api/v1/signup`,\r\n  {\r\n    name: values.name,\r\n    email: values.email,\r\n    phone: values.phone,\r\n    password: values.password\r\n  \r\n  })\r\n  .then(res => {\r\n    console.log(res.data);\r\n    // alert('User Signed in')\r\n    resetForm({})\r\n  })\r\n}\r\n\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  name: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Name should be of minimum 4 characters length')\r\n    .required('Name is required'),\r\n\r\n    phone: yup\r\n    .string('Enter your phone no.')\r\n    .matches(phoneRegExp, 'Phone number is not valid')\r\n    .min(11, 'Phone should contain 11 digits')\r\n    .max(11, 'Phone should contain 11 digits')\r\n    .required('phone number is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Signupform() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n      phone:'',\r\n      password: ''\r\n     \r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-main\"> \r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Sign up Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"name\"\r\n              label=\"name\"\r\n              className=\"inputbox\"\r\n\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"inputbox\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"phone\"\r\n              label=\"phone\"\r\n              className=\"inputbox\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"inputbox\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signupform;","export const reducer = (state, action) => {\r\n    switch (action.type) {\r\n  \r\n      case \"USER_LOGIN\": {\r\n        if (\r\n          action.payload.name &&\r\n          action.payload.email) {\r\n  \r\n          return { ...state, user: action.payload }\r\n  \r\n        } else {\r\n          console.log(`invalid data in USER_LOGIN reducer `);\r\n          return state;\r\n        }\r\n      }\r\n      case \"USER_LOGOUT\": {\r\n        return { ...state, user: null } // set this to null on purpose, do not change\r\n      }\r\n      case \"TOGGLE_THEME\": {\r\n        return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n      }\r\n  \r\n  \r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  user: undefined\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import '../App.css';\r\n// import {useHistory} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\nimport { GlobalContext } from '../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\n\r\nconst validationSchema = yup.object({ \r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Loginform() {\r\n\r\n  // let history = useHistory();\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n\r\n  const submit = (values) => {\r\n    console.log(\"values\", values)\r\n\r\n\r\n    axios.post(`${baseurl}/api/v1/login`,\r\n      {\r\n        email: values.email,\r\n        password: values.password\r\n      },{\r\n        withCredentials: true\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        alert('User Logined')\r\n        if (res.data.email) {\r\n          dispatch({\r\n            type: \"USER_LOGIN\",\r\n            payload: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n              _id: res.data._id\r\n            }\r\n          })\r\n        }\r\n\r\n        \r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-main\">\r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Login Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"inputbox\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"inputbox\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loginform;","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport { baseurl } from '../../core';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\n\r\n\r\nfunction DashNavbar() {\r\n    \r\n    let { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n    const logout = () => {\r\n        axios.post(`${baseurl}/api/v1/logout`, {}, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                dispatch({\r\n                    type: \"USER_LOGOUT\"\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"success\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"nav-main\">React-Form</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <li>\r\n                                <Link to=\"/\" className=\"nav-itms\">Profile</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/dashboard\" className=\"nav-itms\">Dashboard</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/myposts\" className=\"nav-itms\">MyPosts</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/\" onClick={logout} className=\"nav-itms\" style={{ fontWeight:\"600\"}}>Logout</Link>\r\n                            </li>\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashNavbar;","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\n// import FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\n\r\nimport ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';\r\nimport '../../App.css'\r\n\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\n\r\n\r\nexport default function PostCard(props) {\r\n    const { post, email, name, time } = props;\r\n\r\n\r\n    return (\r\n        <div className=\"postcard\">\r\n            <Card sx={{ maxWidth: \"80%\" }}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                            {name[0]}\r\n                        </Avatar>\r\n                    }\r\n\r\n                    // action={\r\n                    //     <IconButton aria-label=\"settings\">\r\n                    //         <MoreVertIcon />\r\n                    //     </IconButton>\r\n                    // }\r\n\r\n\r\n                    id=\"post-name\"\r\n                    title={name}\r\n                    subheader={time}\r\n\r\n                />\r\n                <hr style={{width:\"100%\"}}/>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" id=\"post-item\">\r\n                        \r\n                        {post}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n\r\n\r\n\r\n                <CardActions>\r\n                    <div className=\"cardfooter\">    \r\n                        <IconButton className=\"cardicon\" aria-label=\"React\">\r\n                            <ThumbUpAltIcon style={{marginRight:\"40px\"}} />\r\n                        </IconButton>\r\n                        <IconButton className=\"cardicon\" aria-label=\"Comment\">\r\n                            <ModeCommentIcon style={{marginRight:\"40px\"}} />\r\n                        </IconButton>\r\n                        <IconButton className=\"cardicon\" aria-label=\"share\">\r\n                            <ShareIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </CardActions>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}","import '../../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport Postcard from './Postcard';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../../core';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\nimport moment from 'moment';\r\nimport io from 'socket.io-client';\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    post: yup\r\n        .string('Enter your password')\r\n        .min(4, 'Name should be of minimum 4 characters length')\r\n        .required('Name is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n    const [posts, setPosts] = useState([])\r\n    // let history = useHistory();\r\n    const [isMore, setIsMore] = useState(true)\r\n\r\n    const submit = (values, { resetForm }) => {\r\n        console.log(\"values\", values)\r\n        let m = moment().format('MMMM Do YYYY')\r\n        console.log(m)\r\n        axios.post(`${baseurl}/api/v1/post`,\r\n            {\r\n                post: values.post,\r\n                time: m\r\n            }, {\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                console.log(\"postdata\", res.data);\r\n                resetForm({});\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseurl}/api/v1/post?page=0`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPosts(response.data)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const socket = io(baseurl);\r\n        // to connect with locally running Socker.io server\r\n\r\n        socket.on('connect', function () {\r\n            console.log(\"connected to server\")\r\n        });\r\n\r\n        socket.on('disconnect', function (message) {\r\n            console.log(\"disconnected from server: \", message);\r\n        });\r\n\r\n        socket.on('POSTS', function (data) {\r\n            console.log(data);\r\n            setPosts((prev) => [data, ...prev])\r\n        });\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, []);\r\n\r\n    const loadMore = () => {\r\n        axios.get(`${baseurl}/api/v1/post?page=${posts.length}`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                if (res.data?.length) {\r\n                    const newPosts = [...posts, ...res.data]\r\n                    setPosts(newPosts)\r\n                } else {\r\n                    setIsMore(false)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            post: '',\r\n\r\n        },\r\n        onSubmit: submit\r\n    },\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app-main\">\r\n                <div className=\"post-main\">\r\n                    <form id=\"post-form\" onSubmit={formik.handleSubmit}>\r\n                        \r\n                        <h3 style={{ padding: \"5%\" }}> What's on Your Mind </h3>\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            name=\"post\"\r\n                            label=\"post\"\r\n                            type=\"post\"\r\n                            className=\"box\"\r\n                            id=\"postbox\"\r\n\r\n                            value={formik.values.caption}\r\n                            onChange={formik.handleChange}\r\n\r\n\r\n                            error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                            helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                            variant=\"outlined\" />\r\n\r\n\r\n                        <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n                            Post\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div id=\"posts\">\r\n                    {posts?.map((posts, index) => (\r\n                        // <div id=\"cont\">\r\n                        //     <h3 id=\"post-name\">{posts?.name}</h3>\r\n                        //     <hr />\r\n                        //     <p id=\"post-item\">{posts?.post}</p>\r\n                        //     <p className=\"buttonbox\">\r\n                        //         <button className=\"btn\">Like</button>\r\n                        //         <button className=\"btn\">Comment</button>\r\n                        //         <button className=\"btn\">Share</button>\r\n                        //     </p>\r\n                        // </div>\r\n                        <div className=\"postcard\">\r\n                            <Postcard\r\n                                key={index}\r\n                                name={posts?.name}\r\n                                time={posts?.time}\r\n                                post={posts?.post}\r\n                            />\r\n                        </div>\r\n                    )\r\n\r\n                    )}\r\n                {(isMore) ? <Button id=\"loadmorebtn\" onClick={loadMore}> &#x2193; Load More</Button>\r\n                 : \r\n                 <p id=\"nopost\">No More Posts</p>\r\n                \r\n                }\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\n\r\nfunction Splashscreen() {\r\n    return (\r\n        <>\r\n            <div className=\"splashscreen\">\r\n                <img src=\"https://c.tenor.com/sOcqo6-1sXQAAAAM/loading-bar.gif\" alt=\"splashscreen\" />\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Splashscreen;","export default __webpack_public_path__ + \"static/media/profile.fa9c4bd1.jpg\";","import axios from 'axios';\r\nimport { useState, useEffect } from \"react\"\r\nimport { baseurl } from '../core';\r\n// import { GlobalContext } from '../context/Context';\r\n// import { useContext } from \"react\";\r\nimport Profileimage from '../images/profile.jpg'\r\nimport './../App.css'\r\n\r\nfunction Profile() {\r\n\r\n    // let { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const [profile, setProfile] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${baseurl}/api/v1/profile`, {\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                console.log(\"res +++: \", res.data);\r\n                setProfile(res.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"profile\">\r\n\r\n                {/* <h1 id=\"profileheader\"><div class=\"text\">\r\n                    <span>M</span>\r\n                    <span>Y</span>\r\n                    <span>P</span>\r\n                    <span>R</span>\r\n                    <span>O</span>\r\n                    <span>I</span>\r\n                    <span>L</span>\r\n                    <span>E</span>\r\n                </div></h1> */}\r\n\r\n\r\n                <h1 id=\"profileheader\">My Profile</h1>\r\n                <img id=\"profilepic\" src={Profileimage} alt=\"profilepic\" />\r\n                <h2 id=\"personaldtl\">Personal Details</h2>\r\n\r\n                <div className=\"info\">\r\n                <h4>Name: <span> {profile?.name} </span> </h4>\r\n                <h4>Email: {profile?.email} </h4>\r\n                <h4>Phone: {profile?.phone}</h4>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SearchAppBar() {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"success\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"nav-main\">React-Form</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n\r\n                            <li>\r\n                                <Link to=\"/signup\" className=\"nav-itms\">Signup</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/\" className=\"nav-itms\">Login</Link>\r\n                            </li>\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchAppBar;","import '../../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../../core';\r\nimport { GlobalContext } from '../../context/Context';\r\nimport { useContext } from \"react\";\r\nimport PostCard from './Postcard';\r\n\r\n\r\nfunction MyPosts() {\r\n\r\n    let { state, dispatch } = useContext(GlobalContext);\r\n    const [myposts, setMyposts] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseurl}/api/v1/mypost`,\r\n            {\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setMyposts(response.data)\r\n                console.log(myposts)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app-main\">\r\n                <h1> My Posts </h1>\r\n                <div id=\"post\">\r\n                    {myposts?.map((posts, index) => (\r\n                        <div className=\"postcard\">\r\n                            <PostCard\r\n                                key={index}\r\n                                name={posts?.name}\r\n                                time={posts?.time}\r\n                                post={posts?.post}\r\n                            />\r\n                        </div>\r\n                    )\r\n\r\n                    )}\r\n                </div>           \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import './App.css';\nimport Signup from './components/Signupform';\nimport Login from './components/LoginForm';\nimport DashNavbar from './components/Navbar/DashNavbar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Splashscreen from './components/Splashscreen';\nimport Profile from './components/Profile';\nimport SearchAppBar from './components/Navbar/SearchAppBar';\nimport MyPosts from './components/Dashboard/MyPosts';\nimport axios from 'axios';\nimport { baseurl } from './core';\nimport { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useHistory,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { GlobalContext } from './context/Context';\nimport { useContext } from \"react\";\n\nfunction App() {\n\n  let history = useHistory();\n  let { state, dispatch } = useContext(GlobalContext);\n\n  useEffect(() => {\n\n    axios.get(`${baseurl}/api/v1/profile`, {\n      withCredentials: true\n    })\n      .then((res) => {\n        console.log(\"res: \", res.data);\n\n        if (res.data.email) {\n\n          dispatch({\n            type: \"USER_LOGIN\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              _id: res.data._id\n            }\n          })\n        } else {\n          dispatch({ type: \"USER_LOGOUT\" })\n        }\n      }).catch((e) => {\n        dispatch({ type: \"USER_LOGOUT\" })\n      })\n\n    return () => {\n    };\n  }, []);\n\n\n  return (\n    <>\n      {(state?.user?.email) ?\n\n        <DashNavbar />\n        :\n        <SearchAppBar />\n\n      }\n\n\n\n\n      {(state.user === undefined) ?\n        <Switch>\n          <Route exact path=\"/\">\n          \n            \n              <Splashscreen />\n          \n            \n          </Route>\n        </Switch>\n        : null}\n\n      {(state.user === null) ?\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Redirect to=\"/\" />\n        </Switch> : null\n      }\n\n      {(state.user) ?\n        <Switch>\n          <Route exact path=\"/\">\n            <Profile />\n          </Route>\n\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/myposts\">\n            <MyPosts />\n          </Route>\n\n\n          <Redirect to=\"/\" />\n        </Switch>\n        : null}\n\n\n\n\n\n      {/* <Router>\n        <SearchAppBar />\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route exact path=\"/\">\n            <Signup />\n          </Route>\n        </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ContextProvider from \"./context/Context\"\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}